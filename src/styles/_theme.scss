@import "./colors";

/* $text--light: black;
$text--dark: white;
$bg--light: white;
$bg--dark: black; */

$themes: (
  light: (
    elements-color: $White,
    background-color: $LightBg,
    text-color: $LightText,
    input-color: $LightInput
  ),
  dark: (
    elements-color: $DarkElements,
    background-color: $DarkBg,
    text-color: $White,
    input-color: rgb(220, 220, 220)
  ),
);

/* $themes: (
  light: (
    bg: $bg--light,
    text: $text--light,
  ),
  dark: (
    bg: $bg--dark,
    text: $text--dark,
  ),
); */

@mixin themed() {
  @each $theme, $map in $themes {
    .theme--#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function t($key) {
  @return map-get($theme-map, $key);
}

// usage
/* .myClass {
  @include themed(){
    background: themed("my-class-bg");
    color: themed("text-color");
  }
} */

